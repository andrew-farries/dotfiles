#################################################################
# Most of this config is taken from the excellent book 'tmux 2'
# by Brian P Hogan
#################################################################

# Set fish as the default shell
{{ if (eq .chezmoi.os "darwin") -}}
set -g default-command /opt/homebrew/bin/fish
{{- end -}}
{{ if (eq .chezmoi.os "linux") -}}
set -g default-command /bin/fish
{{- end }}

# Unbind the default prefix
unbind C-b

# Create a new prefix
set -g prefix C-f

# Enable the tmux passthrough escape sequence. This is required for
# the OSC52 escape sequence to work from within vim.
set -g allow-passthrough on

# Set the delay between prefix and command
set -s escape-time 1

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Reload this config file with prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Ensure that we can send C-a to other apps (by doing it twice)
bind C-f send-prefix

# Split panes with | and -
# Also retain the current working directory
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Create a 'drawer' pane at the bottom of the current window.
bind b split-window -c "#{pane_current_path}" -l 20%

# Close all but the current pane
bind o kill-pane -a

# Rebind x to kill pane without asking for confirmation
bind-key x kill-pane

# Move between panes with vim keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quick window selection - move left and right with ctrl and vim keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize panes using vim style keys
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

#Â Use vim style key mappings in copy mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection
unbind p
bind p paste-buffer

# Switch off mouse support
set -g mouse off

# Set the default terminal mode to 256 color mode
set -g default-terminal "screen-256color"

# tell Tmux that outside terminal supports true color
set -ag terminal-overrides ",$TERM:RGB"

# Set the colors for the status line
set -g status-style fg="#abb2bf",bg="#282c34"

# Set the color of the window list
setw -g window-status-style fg="#abb2bf",bg="#282c34"

# Set colors for the active window
setw -g window-status-current-style fg="#282c34",bg=green,bold

# Colors for pane borders
setw -g pane-border-style fg="#abb2bf"
setw -g pane-active-border-style fg=green,bold

# Active pane normal, other panes shaded out
# setw -g window-style fg=colour240,bg=colour235
# setw -g window-active-style fg=white,bg=black

# Style the command/message line
set -g message-style fg="#abb2bf",bg="#282c34"

# Center the window list in the status line
set -g status-justify centre

# Define the left side of the status line
set -g status-left-length 40
set -g status-left \
  "\uf308#[fg="#abb2bf",bg="#282c34"] #(kubectl config current-context)\
  {{- if (eq .chezmoi.os "darwin") }} \ue712 #(limactl list --json | jq -r '.status')\{{ end }}
  #[fg="#12100C",bg="#ffb45b"]#(echo $GITPOD_WORKSPACE_ID)"

# Define the right side of the status line
set -g status-right "#[fg="#abb2bf",bg="#282c34"]\uf64f %d %b %R"

# Disable activity alerts - these were set to 'on' but vim focuslost events were causing lots of spurious
# activity when moving off a window with vim active, so these settings were switched to off.
setw -g monitor-activity off
set -g visual-activity off

# Enable vi keys (for working with buffers)
setw -g mode-keys vi

# Set a keybinding to toggle status bar visibility.
bind v set -g status

# Set a keybinding to clear all panes in the current window.
# This overwrites the command to 'mark' a pane.
bind m setw synchronize-panes \; send-keys C-l \; setw synchronize-panes

# Enable focus events so that applications in panes can respond to focus events
set -g focus-events on

# Smart pane switching with awareness of Vim splits (and fzf).
# See: https://github.com/christoomey/vim-tmux-navigator
# See: https://www.bugsnag.com/blog/tmux-and-vim for the additon for fzf.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"
bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Now that ctrl-l is no longer available to clear the screen (taken by vim-tmux-navigator)
# define a new prefixed version.
bind C-l send-keys 'C-l'

{{ if (eq .chezmoi.os "darwin") -}}
# MacOS specific config

# Take buffer contents and put them in the system clipboard
bind C-c run "tmux save-buffer - | pbcopy"

# y in copy mode takes the selection and sends it to the system clipboard
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# Fill tmux buffer from system clipboard, then paste into tmux window
bind C-v run "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"
{{- end }}
